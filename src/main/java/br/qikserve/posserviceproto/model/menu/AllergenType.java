// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: menu.proto

package br.qikserve.posserviceproto.model.menu;

/**
 * Protobuf enum {@code AllergenType}
 */
public enum AllergenType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>CELERY = 0;</code>
   */
  CELERY(0),
  /**
   * <code>GLUTEN = 1;</code>
   */
  GLUTEN(1),
  /**
   * <code>GRAINS_GLUTEN = 2;</code>
   */
  GRAINS_GLUTEN(2),
  /**
   * <code>CRUSTACEANS = 3;</code>
   */
  CRUSTACEANS(3),
  /**
   * <code>EGGS = 4;</code>
   */
  EGGS(4),
  /**
   * <code>FISH = 5;</code>
   */
  FISH(5),
  /**
   * <code>LUPIN = 6;</code>
   */
  LUPIN(6),
  /**
   * <code>MILK = 7;</code>
   */
  MILK(7),
  /**
   * <code>MOLLUSCS = 8;</code>
   */
  MOLLUSCS(8),
  /**
   * <code>MUSTARD = 9;</code>
   */
  MUSTARD(9),
  /**
   * <code>NUTS = 10;</code>
   */
  NUTS(10),
  /**
   * <code>PEANUTS = 11;</code>
   */
  PEANUTS(11),
  /**
   * <code>SHELLFISH = 12;</code>
   */
  SHELLFISH(12),
  /**
   * <code>SOYA = 13;</code>
   */
  SOYA(13),
  /**
   * <code>SULPHUR = 14;</code>
   */
  SULPHUR(14),
  /**
   * <code>SESAME = 15;</code>
   */
  SESAME(15),
  /**
   * <code>SULPHITES = 16;</code>
   */
  SULPHITES(16),
  /**
   * <code>CEREALS = 17;</code>
   */
  CEREALS(17),
  /**
   * <code>DAIRY = 18;</code>
   */
  DAIRY(18),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>CELERY = 0;</code>
   */
  public static final int CELERY_VALUE = 0;
  /**
   * <code>GLUTEN = 1;</code>
   */
  public static final int GLUTEN_VALUE = 1;
  /**
   * <code>GRAINS_GLUTEN = 2;</code>
   */
  public static final int GRAINS_GLUTEN_VALUE = 2;
  /**
   * <code>CRUSTACEANS = 3;</code>
   */
  public static final int CRUSTACEANS_VALUE = 3;
  /**
   * <code>EGGS = 4;</code>
   */
  public static final int EGGS_VALUE = 4;
  /**
   * <code>FISH = 5;</code>
   */
  public static final int FISH_VALUE = 5;
  /**
   * <code>LUPIN = 6;</code>
   */
  public static final int LUPIN_VALUE = 6;
  /**
   * <code>MILK = 7;</code>
   */
  public static final int MILK_VALUE = 7;
  /**
   * <code>MOLLUSCS = 8;</code>
   */
  public static final int MOLLUSCS_VALUE = 8;
  /**
   * <code>MUSTARD = 9;</code>
   */
  public static final int MUSTARD_VALUE = 9;
  /**
   * <code>NUTS = 10;</code>
   */
  public static final int NUTS_VALUE = 10;
  /**
   * <code>PEANUTS = 11;</code>
   */
  public static final int PEANUTS_VALUE = 11;
  /**
   * <code>SHELLFISH = 12;</code>
   */
  public static final int SHELLFISH_VALUE = 12;
  /**
   * <code>SOYA = 13;</code>
   */
  public static final int SOYA_VALUE = 13;
  /**
   * <code>SULPHUR = 14;</code>
   */
  public static final int SULPHUR_VALUE = 14;
  /**
   * <code>SESAME = 15;</code>
   */
  public static final int SESAME_VALUE = 15;
  /**
   * <code>SULPHITES = 16;</code>
   */
  public static final int SULPHITES_VALUE = 16;
  /**
   * <code>CEREALS = 17;</code>
   */
  public static final int CEREALS_VALUE = 17;
  /**
   * <code>DAIRY = 18;</code>
   */
  public static final int DAIRY_VALUE = 18;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static AllergenType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static AllergenType forNumber(int value) {
    switch (value) {
      case 0: return CELERY;
      case 1: return GLUTEN;
      case 2: return GRAINS_GLUTEN;
      case 3: return CRUSTACEANS;
      case 4: return EGGS;
      case 5: return FISH;
      case 6: return LUPIN;
      case 7: return MILK;
      case 8: return MOLLUSCS;
      case 9: return MUSTARD;
      case 10: return NUTS;
      case 11: return PEANUTS;
      case 12: return SHELLFISH;
      case 13: return SOYA;
      case 14: return SULPHUR;
      case 15: return SESAME;
      case 16: return SULPHITES;
      case 17: return CEREALS;
      case 18: return DAIRY;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<AllergenType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      AllergenType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<AllergenType>() {
          public AllergenType findValueByNumber(int number) {
            return AllergenType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return br.qikserve.posserviceproto.model.menu.MenuProtos.getDescriptor().getEnumTypes().get(1);
  }

  private static final AllergenType[] VALUES = values();

  public static AllergenType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private AllergenType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:AllergenType)
}

